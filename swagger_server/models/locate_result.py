# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.locate_result_found import LocateResultFound  # noqa: F401,E501
from swagger_server import util


class LocateResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, found: List[LocateResultFound]=None):  # noqa: E501
        """LocateResult - a model defined in Swagger

        :param found: The found of this LocateResult.  # noqa: E501
        :type found: List[LocateResultFound]
        """
        self.swagger_types = {
            'found': List[LocateResultFound]
        }

        self.attribute_map = {
            'found': 'found'
        }
        self._found = found

    @classmethod
    def from_dict(cls, dikt) -> 'LocateResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The locateResult of this LocateResult.  # noqa: E501
        :rtype: LocateResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def found(self) -> List[LocateResultFound]:
        """Gets the found of this LocateResult.


        :return: The found of this LocateResult.
        :rtype: List[LocateResultFound]
        """
        return self._found

    @found.setter
    def found(self, found: List[LocateResultFound]):
        """Sets the found of this LocateResult.


        :param found: The found of this LocateResult.
        :type found: List[LocateResultFound]
        """
        if found is None:
            raise ValueError("Invalid value for `found`, must not be `None`")  # noqa: E501

        self._found = found
