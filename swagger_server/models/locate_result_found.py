# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LocateResultFound(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, token: str=None, locations: List[int]=None):  # noqa: E501
        """LocateResultFound - a model defined in Swagger

        :param token: The token of this LocateResultFound.  # noqa: E501
        :type token: str
        :param locations: The locations of this LocateResultFound.  # noqa: E501
        :type locations: List[int]
        """
        self.swagger_types = {
            'token': str,
            'locations': List[int]
        }

        self.attribute_map = {
            'token': 'token',
            'locations': 'locations'
        }
        self._token = token
        self._locations = locations

    @classmethod
    def from_dict(cls, dikt) -> 'LocateResultFound':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The locateResult_found of this LocateResultFound.  # noqa: E501
        :rtype: LocateResultFound
        """
        return util.deserialize_model(dikt, cls)

    @property
    def token(self) -> str:
        """Gets the token of this LocateResultFound.


        :return: The token of this LocateResultFound.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token: str):
        """Sets the token of this LocateResultFound.


        :param token: The token of this LocateResultFound.
        :type token: str
        """

        self._token = token

    @property
    def locations(self) -> List[int]:
        """Gets the locations of this LocateResultFound.


        :return: The locations of this LocateResultFound.
        :rtype: List[int]
        """
        return self._locations

    @locations.setter
    def locations(self, locations: List[int]):
        """Sets the locations of this LocateResultFound.


        :param locations: The locations of this LocateResultFound.
        :type locations: List[int]
        """

        self._locations = locations
